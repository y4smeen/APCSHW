import java.util.*;
import java.io.*;

/*
interfaces: a contract (in java) that specifies that a class will 
implement certain methods with certain signatures

interface name {
  method1_signature;
  method2_signature;
}

method signature is: public/private return_type name(params);
ex: the built in java comparable interface:
interface Comparable {
  public int compareTo(Object other);
}
to agree to implement an interface use "implements"
ex:
class myClass implements Comparable {
  // class definitions here
}
*/
public class Interval {
    public static final double PI = 3.14;
    private Random r = new Random();
    private int low, high;
    private int numIntervals = 0;

    private void setup(int l, int h) {
	high = h;
	low = l;
	numIntervals++;
    }

    public Interval(int l, int h) {
	setup(l,h);
    }

    public Interval() {
	int h = r.nextInt(100);
	int l = r.nextInt(h);
	setup(l,h);
    }

    public String toString() {
	String s = "Interval Number: " + numIntervals + " --> [" + low + ", " + high + "]";
	return s;
    }

    public static void printStuff() {
	System.out.println("Stuff");
    }

    public int compareTo(Object other) {
	//create a local variable and cast and assign the parameter
	Interval o = (Interval)other;
	/*
	if (this.low == o.low) {
	    return this.high - o.high;
	} else {
	    return this.low - o.low;
	}
	*/
	return (this.high - this.low) - (o.high - o.low);
    }

    public static void main(String[] args) {
	for (int i = 0; i < 10; i++) {
	    System.out.println(new Interval());
	}
	/* works b/c printStuff is static
	   it belongs to the class and is created with the class 
	   not with the instances
	   we can call it without interval b/c we're in the class
	*/
	printStuff();
	Interval.printStuff();//calling off the class, like Math.sqrt
	Interval x = new Interval();
	x.printStuff();//we can also call off an instance]

	Interval[] a = new Interval[10];
	for (int i = 0; i < a.length; i++) {
	    a[i] = new Interval();
	}
	System.out.println(Arrays.toString(a));
	String[] sa = {"frog","toad","iguana","komono dragon","bearded lizard"};
	System.out.println(Arrays.toString(sa));
	Arrays.sort(sa);
	System.out.println(Arrays.toString(sa));

	int[] ia = {20,1,55,100,33,201};
	System.out.println(Arrays.toString(ia));
	Arrays.sort(ia);
	System.out.println(Arrays.toString(ia));

	System.out.println(Arrays.toString(a));
	Arrays.sort(a);
	System.out.println(Arrays.toString(a));


    }
}
